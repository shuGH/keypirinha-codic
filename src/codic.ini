#
# Codic Package configuration file
# More info at http://keypirinha.com
#

[defaults]

# The access token of codic API.
# Default:
access_token = YOUR_ACCESS_TOKEN

# The display name of the default item
# Default: Codic:
#item_label = Codic:

# The code of the default source language to assume if none is specified at
# search time
# * Refer to the bottom of this file or the documentation for an exhaustive list
#   of the language codes supported by Google Translate,
# * Default: none
#project_id = none

# The code of the default source language to assume if none is specified at
# search time
# * Refer to the bottom of this file or the documentation for an exhaustive list
#   of the language codes supported by Google Translate,
# * Default: auto
#casing = auto
        ; ("casing", ""),         # camel, pascal, lower underscore, upper underscore, hyphen

# The code of the default target language to assume if none is specified at
# search time
# * Refer to the bottom of this file or the documentation for an exhaustive list
#   of the language codes supported by Google Translate,
# * Default: en
#acronym_style = en
        ; ("acronym_style", "")   # MS naming guidelines, camel strict, literal

# Time that the plugin will wait before sending the request.
# * Time in seconds (can be used with float type)
# * The range of permissible values is [0.25, 3]
# * Default: 0.3
#idle_time = 0.3

# * camel：camelCase
# * pascal：PascalCase
# * lower underscore：lower_underscore
# * upper underscore：UPPER_UNDERSCORE
# * hyphen：hyphen-case

# 参考：https://codic.jp/docs/guide/naming

#### 頭字語（acronym）

# PascalCase / camelCaseの時のみ

# * MS naming guidelines：2文字まではすべて大文字、3文字以上は先頭だけ大文字、camelCaseの最初の単語はすべて小文字
# * camel strict：先頭だけ大文字、camelCaseの最初の単語はすべて小文字
# * literal：登録単語に準じる、camelCaseの最初の単語はすべて小文字

# [custom_item/*] sections
#
# In addition to the default item, it is possible to define one or several extra
# items to insert into the Catalog, with different default setting.
#
# Note that this is useful only if you need them often. Otherwise, you might
# just want to use the special argument grammar detailed in the documentation.
#

# Examples:
[custom_item/pascal]
enable = yes
item_label = Codic: PascalCase
casing = pascal
acronym_style = ms naming guidelines

[custom_item/camel]
enable = yes　
item_label = Codic: camelCase
casing = camel
acronym_style = camel strict

[custom_item/lower]
enable = yes
item_label = Codic: snake_case
casing = lower underscore

[custom_item/upper]
enable = yes
item_label = Codic: UPPER_CASE
casing = upper underscore

[custom_item/hyphen]
enable = yes
item_label = Codic: chain-case
casing = hyphen

# Examples:
#   [custom_item/ChineseToEnglish]
#   item_label = {default_item_label} from {input_lang_label} to {output_lang_label}
#   input_lang = zh-CN
#   output_lang = en
#
#   [custom_item/GermanToSpanish]
#   enable = no
#   item_label = Translate [{input_lang_code}:{output_lang_code}]
#   input_lang = de
#   output_lang = es
#
# Here are the properties of a custom item:
# * enable (optional)
#     Allows to disable this particular custom item (if "no"), in which case it
#     will not be inserted into the Catalog. A custom item is enabled by
#     default (i.e. "yes").
# * project_id (optional)
#     The code of the source language
# * casing (optional)
#     The code of the target language
# * acronym_style (optional)
#     The code of the target language
# * item_label (optional)
#     Define the display name of this custom item.
#     In addition to the extrapolation mechanism, this value allows the
#     following placeholders:
#     * {section_name}
#         The name of the current section. For example, if the section is
#         [custom_item/ChineseToEnglish], the name is ChineseToEnglish.
#     * {default_item_label}
#         The item_label value of the default section will be inserted.
#         This is for convenience only since it is equivalent to the more
#         generic form: ${default_item:item_label}
#     * {input_lang_code}
#         The code of the specified source language.
#     * {input_lang_label}
#         The display name of the specified source language.
#     * {output_lang_code}
#         The code of the specified target language.
#     * {output_lang_label}
#         The display name of the specified target language.

[var]
# As in every Keypirinha's configuration file, you may optionally include a
# [var] section to declare variables that you want to reuse anywhere else in
# this file.
#
# Note that the [var] section is inherited, which means that any value defined
# in the main configuration file of the application (i.e.: "Keypirinha.ini") has
# already been made available to this file as well so you do not need to
# duplicate it here unless you want to override it.
#
# REMINDER: For convenience, Keypirinha silently populates this section with
# predefined values that may come handy. Here are some of them: APP_DIR,
# APP_EXE, PROFILE_DIR, PROFILE_DIR_INSTALLED_PACKS, PROFILE_DIR_LIVE_PACKS,
# PROFILE_DIR_USER and the KNOWNFOLDER_* and KNOWNFOLDERGUID_* values.
#
# See the "Configuration" chapter of the documentation for more information.


[env]
# For convenience, Keypirinha populates this [env] section in every loaded
# configuration file so you can easily access to environment variables like
# PATH for example from this file using syntax: ${env:PATH}
#
# If an environment variable happens to be changed while Keypirinha is running
# and this modification impacts current configuration, application and packages
# configuration will be reloaded if needed only.
#
# See the "Configuration" chapter of the documentation for more information.
