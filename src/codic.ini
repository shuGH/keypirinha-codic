#
# Codic Package configuration file
# More info at http://keypirinha.com
#

[defaults]

# デフォルトの設定項目です

# !!! 必ず設定して下さい !!!
# !!! REQUIRED SETTING !!!
# CodicAPIにアクセスするためのトークン
# The access token of Codic API.
# cf. https://codic.jp/docs/api#authorization
# * This is nessesary to use Codic API.
# * Default:
access_token = YOUR_ACCESS_TOKEN

# カタログでの表示名
# The display name of the default item.
# * Default: Codic:
#item_label = Codic:

# 使用する辞書のプロジェクトID
# The ID of the project (dictionary) to be used for translation.
# cf. https://codic.jp/docs/guide/team
# cf. https://codic.jp/docs/api/engine/translate
# * If not specified, the system dictionary is used.
# * Default:
#project_id =

# 変換するケース指定
# Specify the SOA processing method
# cf. https://codic.jp/docs/guide/naming
# cf. https://codic.jp/docs/api/engine/translate
# * Accepted values:
#   * camel: camelCase
#   * pascal: PascalCase
#   * lower underscore: lower_underscore
#   * upper underscore: UPPER_UNDERSCORE
#   * hyphen: hyphen-case
#   * <blank>: space case
# * Default:
#casing =

# 頭字語の扱い指定（パスカルケースまたはキャメルケースのみ）
# The capitalization rules for acronyms.
# cf. https://codic.jp/docs/guide/naming#casing
# cf. https://codic.jp/docs/api/engine/translate
# * This is enabled only at casing setting is camel or pascal.
# * If casing setting is camel, first word is all lower case at any style.
# * Accepted values:
#   * MS naming guidelines: ID, IO, Xml, Html
#   * camel strict: Id, Io, Xml, Html
#   * literal: According to the words registered in the dictionary.
# * Default: literal
#acronym_style =

# 入力から変換APIを叩くまでの遅延秒
# Time that the plugin will wait before sending the request.
# * Time in seconds (can be used with float type)
# * The range of permissible values is [0.25, 3]
# * Default: 0.3
#idle_time =

# [custom_item/*] sections

# デフォルトとは別に任意の設定の項目を複数追加出来ます
# In addition to the default item, it is possible to define one or several extra
# items to insert into the Catalog, with different default setting.

# Examples:
# [custom_item/pascal]
# enable = yes
# item_label = Codic: PascalCase
# casing = pascal
# acronym_style = camel strict

# [custom_item/camel]
# enable = yes　
# item_label = Codic: camelCase
# casing = camel
# acronym_style = camel strict

# [custom_item/lower]
# enable = yes
# item_label = Codic: snake_case
# casing = lower underscore

# [custom_item/upper]
# enable = yes
# item_label = Codic: UPPER_CASE
# casing = upper underscore

# [custom_item/hyphen]
# enable = yes
# item_label = Codic: chain-case
# casing = hyphen

# Here are the properties of a custom item:
# * enable (optional)
#     Allows to disable this particular custom item (if "no"), in which case it
#     will not be inserted into the Catalog. A custom item is enabled by
#     * Default: yes
# * item_label (optional)
#     Define the display name of this custom item.
#     * Default: Custom item section name. e.g. [custom_item/Camel:], label is Camel:.
# * project_id (optional)
#     * Default: Same as default section.
# * casing (optional)
#     * Default: Same as default section.
# * acronym_style (optional)
#     * Default: Same as default section.

[var]
# As in every Keypirinha's configuration file, you may optionally include a
# [var] section to declare variables that you want to reuse anywhere else in
# this file.
#
# Note that the [var] section is inherited, which means that any value defined
# in the main configuration file of the application (i.e.: "Keypirinha.ini") has
# already been made available to this file as well so you do not need to
# duplicate it here unless you want to override it.
#
# REMINDER: For convenience, Keypirinha silently populates this section with
# predefined values that may come handy. Here are some of them: APP_DIR,
# APP_EXE, PROFILE_DIR, PROFILE_DIR_INSTALLED_PACKS, PROFILE_DIR_LIVE_PACKS,
# PROFILE_DIR_USER and the KNOWNFOLDER_* and KNOWNFOLDERGUID_* values.
#
# See the "Configuration" chapter of the documentation for more information.


[env]
# For convenience, Keypirinha populates this [env] section in every loaded
# configuration file so you can easily access to environment variables like
# PATH for example from this file using syntax: ${env:PATH}
#
# If an environment variable happens to be changed while Keypirinha is running
# and this modification impacts current configuration, application and packages
# configuration will be reloaded if needed only.
#
# See the "Configuration" chapter of the documentation for more information.
